name: Check Build

on:
  push:
    branches:
      - master
      - 'release/**'
  pull_request:
    branches:
      - '**'

# Cancel running jobs from previous pipelines of the same workflow on PR to save resource when commits are pushed quickly
# NOTE: we don't want this behavior on default branch
# See https://stackoverflow.com/a/68422069
concurrency:
  group: ${{ github.ref == 'refs/heads/master' && format('ci-default-branch-{0}-{1}', github.sha, github.workflow) || format('ci-pr-{0}-{1}', github.ref, github.workflow) }}
  cancel-in-progress: true

jobs:
  # This job is to make sure Webpack builds the application fine. This is helpful
  # to know as we don't want to find out this failure as late as when we prepare the
  # artifacts to publish to Docker.
  application-build-check:
    name: Check Application Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - application: '@finos/legend-studio-deployment'
            os: ubuntu-latest
          # NOTE: here we run a build on Windows just to check how the build process work for Windows
          # developers. Setting up an OS matrix for all applications is unnecessary.
          - application: '@finos/legend-studio-deployment'
            os: windows-latest
          - application: '@finos/legend-query-deployment'
            os: ubuntu-latest
          - application: '@finos/legend-taxonomy-deployment'
            os: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.4.0
      - name: Get Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - name: Setup Yarn cache
        uses: actions/cache@v2.1.7
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - name: Setup Node
        uses: actions/setup-node@v2.5.1
        with:
          node-version: 14.x
      - name: Install dependencies
        run: yarn
      - name: Build application
        run: yarn build && yarn workspace ${{ matrix.application }} bundle
        env:
          # TODO: After https://github.com/finos/legend-studio/pull/227 it seems like due to either
          # the upgrade of Webpack/Typescript that we start seeing some OOM when building Webpack
          # while publishing to Docker. We should once in a while remove this line and try again.
          NODE_OPTIONS: '--max_old_space_size=4096'
