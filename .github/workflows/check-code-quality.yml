name: Check Code Quality

on:
  push:
    branches:
      - master
      - 'release/**'
  pull_request:
    branches:
      - '**'

# Cancel running jobs from previous pipelines of the same workflow on PR to save resource when commits are pushed quickly
# NOTE: we don't want this behavior on default branch
# See https://stackoverflow.com/a/68422069
concurrency:
  group: ${{ github.ref == 'refs/heads/master' && format('ci-default-branch-{0}-{1}', github.sha, github.workflow) || format('ci-pr-{0}-{1}', github.ref, github.workflow) }}
  cancel-in-progress: true

jobs:
  code-quality-check:
    name: SonarCloud Code Quality Check
    runs-on: ubuntu-latest
    # NOTE: we cannot run this action in PR because secrets are not accessible from forks
    # See https://community.sonarsource.com/t/github-action-ci-build-fail-with-set-the-sonar-token-env-variable/38997
    if: github.ref == 'refs/heads/master' && github.repository == 'finos/legend-studio'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # disabling shallow clone is recommended for improving relevancy of reporting
      - name: Get Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - name: Setup Yarn cache
        uses: actions/cache@v2.1.7
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
        # Install step is needed for Typescript scanning to work properly since
        # we refer to another packages in `tsconfig` files, which is used by Sonar
        # See https://community.sonarsource.com/t/sonarts-is-not-able-to-analyse-typescript-files/21510/5
      - name: Install dependencies
        run: yarn
      - name: SonarCloud scan
        uses: sonarsource/sonarcloud-github-action@v1.6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  check-code:
    name: Run Code Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Get Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - name: Setup Yarn cache
        uses: actions/cache@v2.1.7
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
      - name: Install dependencies
        run: yarn
      - name: Check typings
        run: yarn check:tsc
      - name: Run lint
        run: yarn lint:ci

  check-operations:
    name: Run Operational Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Get Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - name: Setup Yarn cache
        uses: actions/cache@v2.1.7
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
      - name: Install dependencies
        run: yarn
      - name: Check package manifests
        run: yarn check:pkg
      - name: Check Typescript project reference configuration
        run: yarn check:project-ref
      - name: Check code formatting
        run: yarn check:format
      - name: Check copyright headers
        run: yarn check:copyright
