[
  {
    "path": "model::Firm",
    "content": {
      "_type": "class",
      "name": "Firm",
      "package": "model",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "legalName",
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 0
          },
          "name": "employees",
          "type": "model::Person"
        },
        {
          "multiplicity": {
            "lowerBound": 0
          },
          "name": "contractors",
          "type": "model::Person"
        },
        {
          "multiplicity": {
            "lowerBound": 1
          },
          "name": "address",
          "type": "model::Address"
        },
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "id",
          "type": "Number"
        }
      ]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "model::Hobby",
    "content": {
      "_type": "class",
      "name": "Hobby",
      "package": "model",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "name",
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "id",
          "type": "Integer"
        }
      ]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "model::Person",
    "content": {
      "_type": "class",
      "name": "Person",
      "package": "model",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "firstName",
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "lastName",
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 0
          },
          "name": "hobbies",
          "type": "model::Hobby"
        }
      ]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "model::Address",
    "content": {
      "_type": "class",
      "name": "Address",
      "package": "model",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "streetName",
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "pincode",
          "type": "Number"
        }
      ],
      "stereotypes": [
        {
          "profile": "meta::pure::profiles::temporal",
          "value": "businesstemporal"
        }
      ]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "model::Firm_QueryFunction__TabularDataSet_1_",
    "content": {
      "_type": "function",
      "body": [
        {
          "_type": "func",
          "function": "from",
          "parameters": [
            {
              "_type": "func",
              "function": "project",
              "parameters": [
                {
                  "_type": "func",
                  "function": "getAll",
                  "parameters": [
                    {
                      "_type": "packageableElementPtr",
                      "fullPath": "model::Firm"
                    }
                  ]
                },
                {
                  "_type": "collection",
                  "multiplicity": {
                    "lowerBound": 1,
                    "upperBound": 1
                  },
                  "values": [
                    {
                      "_type": "lambda",
                      "body": [
                        {
                          "_type": "property",
                          "property": "legalName",
                          "parameters": [
                            {
                              "_type": "var",
                              "name": "x"
                            }
                          ]
                        }
                      ],
                      "parameters": [
                        {
                          "_type": "var",
                          "name": "x"
                        }
                      ]
                    }
                  ]
                },
                {
                  "_type": "collection",
                  "multiplicity": {
                    "lowerBound": 1,
                    "upperBound": 1
                  },
                  "values": [
                    {
                      "_type": "string",
                      "value": "Legal Name"
                    }
                  ]
                }
              ]
            },
            {
              "_type": "packageableElementPtr",
              "fullPath": "execution::RelationalMapping"
            },
            {
              "_type": "packageableElementPtr",
              "fullPath": "execution::TestRuntime"
            }
          ]
        }
      ],
      "name": "Firm_QueryFunction__TabularDataSet_1_",
      "package": "model",
      "parameters": [],
      "postConstraints": [],
      "preConstraints": [],
      "returnMultiplicity": {
        "lowerBound": 1,
        "upperBound": 1
      },
      "returnType": "meta::pure::tds::TabularDataSet"
    },
    "classifierPath": "meta::pure::metamodel::function::ConcreteFunctionDefinition"
  },
  {
    "path": "store::TestDB",
    "content": {
      "_type": "relational",
      "filters": [],
      "includedStores": [],
      "joins": [
        {
          "name": "FirmPerson",
          "operation": {
            "_type": "dynaFunc",
            "funcName": "equal",
            "parameters": [
              {
                "_type": "column",
                "column": "firm_id",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "PersonTable"
                },
                "tableAlias": "PersonTable"
              },
              {
                "_type": "column",
                "column": "id",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "FirmTable"
                },
                "tableAlias": "FirmTable"
              }
            ]
          }
        },
        {
          "name": "FirmAddress",
          "operation": {
            "_type": "dynaFunc",
            "funcName": "equal",
            "parameters": [
              {
                "_type": "column",
                "column": "firm_id",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "AddressTable"
                },
                "tableAlias": "AddressTable"
              },
              {
                "_type": "column",
                "column": "id",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "FirmTable"
                },
                "tableAlias": "FirmTable"
              }
            ]
          }
        },
        {
          "name": "HobbyPerson",
          "operation": {
            "_type": "dynaFunc",
            "funcName": "equal",
            "parameters": [
              {
                "_type": "column",
                "column": "id",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "PersonTable"
                },
                "tableAlias": "PersonTable"
              },
              {
                "_type": "column",
                "column": "id",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "HobbyTable"
                },
                "tableAlias": "HobbyTable"
              }
            ]
          }
        }
      ],
      "name": "TestDB",
      "package": "store",
      "schemas": [
        {
          "name": "default",
          "tables": [
            {
              "columns": [
                {
                  "name": "id",
                  "nullable": false,
                  "type": {
                    "_type": "Integer"
                  }
                },
                {
                  "name": "legal_name",
                  "nullable": true,
                  "type": {
                    "_type": "Varchar",
                    "size": 200
                  }
                }
              ],
              "name": "FirmTable",
              "primaryKey": ["id"]
            },
            {
              "columns": [
                {
                  "name": "id",
                  "nullable": false,
                  "type": {
                    "_type": "Integer"
                  }
                },
                {
                  "name": "firm_id",
                  "nullable": true,
                  "type": {
                    "_type": "Integer"
                  }
                },
                {
                  "name": "firstName",
                  "nullable": true,
                  "type": {
                    "_type": "Varchar",
                    "size": 200
                  }
                },
                {
                  "name": "lastName",
                  "nullable": true,
                  "type": {
                    "_type": "Varchar",
                    "size": 200
                  }
                }
              ],
              "name": "PersonTable",
              "primaryKey": ["id"]
            },
            {
              "columns": [
                {
                  "name": "id",
                  "nullable": false,
                  "type": {
                    "_type": "Integer"
                  }
                },
                {
                  "name": "name",
                  "nullable": true,
                  "type": {
                    "_type": "Varchar",
                    "size": 200
                  }
                }
              ],
              "name": "HobbyTable",
              "primaryKey": ["id"]
            },
            {
              "columns": [
                {
                  "name": "id",
                  "nullable": false,
                  "type": {
                    "_type": "Integer"
                  }
                },
                {
                  "name": "firm_id",
                  "nullable": true,
                  "type": {
                    "_type": "Integer"
                  }
                },
                {
                  "name": "pincode",
                  "nullable": true,
                  "type": {
                    "_type": "Integer"
                  }
                },
                {
                  "name": "streetName",
                  "nullable": true,
                  "type": {
                    "_type": "Varchar",
                    "size": 200
                  }
                }
              ],
              "name": "AddressTable",
              "primaryKey": ["id"]
            }
          ],
          "views": []
        }
      ]
    },
    "classifierPath": "meta::relational::metamodel::Database"
  },
  {
    "path": "execution::RelationalMapping",
    "content": {
      "_type": "mapping",
      "classMappings": [
        {
          "_type": "relational",
          "class": "model::Person",
          "distinct": false,
          "mainTable": {
            "_type": "Table",
            "database": "store::TestDB",
            "mainTableDb": "store::TestDB",
            "schema": "default",
            "table": "PersonTable"
          },
          "primaryKey": [
            {
              "_type": "column",
              "column": "id",
              "table": {
                "_type": "Table",
                "database": "store::TestDB",
                "mainTableDb": "store::TestDB",
                "schema": "default",
                "table": "PersonTable"
              },
              "tableAlias": "PersonTable"
            }
          ],
          "propertyMappings": [
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "model::Person",
                "property": "firstName"
              },
              "relationalOperation": {
                "_type": "column",
                "column": "firstName",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "PersonTable"
                },
                "tableAlias": "PersonTable"
              }
            },
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "model::Person",
                "property": "lastName"
              },
              "relationalOperation": {
                "_type": "column",
                "column": "lastName",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "PersonTable"
                },
                "tableAlias": "PersonTable"
              }
            },
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "model::Person",
                "property": "hobbies"
              },
              "relationalOperation": {
                "_type": "elemtWithJoins",
                "joins": [
                  {
                    "db": "store::TestDB",
                    "name": "HobbyPerson"
                  }
                ]
              },
              "target": "model_Hobby"
            }
          ],
          "root": true
        },
        {
          "_type": "relational",
          "class": "model::Firm",
          "distinct": false,
          "mainTable": {
            "_type": "Table",
            "database": "store::TestDB",
            "mainTableDb": "store::TestDB",
            "schema": "default",
            "table": "FirmTable"
          },
          "primaryKey": [
            {
              "_type": "column",
              "column": "id",
              "table": {
                "_type": "Table",
                "database": "store::TestDB",
                "mainTableDb": "store::TestDB",
                "schema": "default",
                "table": "FirmTable"
              },
              "tableAlias": "FirmTable"
            }
          ],
          "propertyMappings": [
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "model::Firm",
                "property": "legalName"
              },
              "relationalOperation": {
                "_type": "column",
                "column": "legal_name",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "FirmTable"
                },
                "tableAlias": "FirmTable"
              }
            },
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "model::Firm",
                "property": "employees"
              },
              "relationalOperation": {
                "_type": "elemtWithJoins",
                "joins": [
                  {
                    "db": "store::TestDB",
                    "name": "FirmPerson"
                  }
                ]
              },
              "target": "model_Person"
            },
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "model::Firm",
                "property": "contractors"
              },
              "relationalOperation": {
                "_type": "elemtWithJoins",
                "joins": [
                  {
                    "db": "store::TestDB",
                    "name": "FirmPerson"
                  }
                ]
              },
              "target": "model_Person"
            },
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "model::Firm",
                "property": "address"
              },
              "relationalOperation": {
                "_type": "elemtWithJoins",
                "joins": [
                  {
                    "db": "store::TestDB",
                    "name": "FirmAddress"
                  }
                ]
              },
              "target": "model_Address"
            },
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "model::Firm",
                "property": "id"
              },
              "relationalOperation": {
                "_type": "column",
                "column": "id",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "FirmTable"
                },
                "tableAlias": "FirmTable"
              }
            }
          ],
          "root": true
        },
        {
          "_type": "relational",
          "class": "model::Hobby",
          "distinct": false,
          "mainTable": {
            "_type": "Table",
            "database": "store::TestDB",
            "mainTableDb": "store::TestDB",
            "schema": "default",
            "table": "HobbyTable"
          },
          "primaryKey": [
            {
              "_type": "column",
              "column": "id",
              "table": {
                "_type": "Table",
                "database": "store::TestDB",
                "mainTableDb": "store::TestDB",
                "schema": "default",
                "table": "HobbyTable"
              },
              "tableAlias": "HobbyTable"
            }
          ],
          "propertyMappings": [
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "model::Hobby",
                "property": "name"
              },
              "relationalOperation": {
                "_type": "column",
                "column": "name",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "HobbyTable"
                },
                "tableAlias": "HobbyTable"
              }
            },
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "model::Hobby",
                "property": "id"
              },
              "relationalOperation": {
                "_type": "column",
                "column": "id",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "HobbyTable"
                },
                "tableAlias": "HobbyTable"
              }
            }
          ],
          "root": true
        },
        {
          "_type": "relational",
          "class": "model::Address",
          "distinct": false,
          "mainTable": {
            "_type": "Table",
            "database": "store::TestDB",
            "mainTableDb": "store::TestDB",
            "schema": "default",
            "table": "AddressTable"
          },
          "primaryKey": [
            {
              "_type": "column",
              "column": "id",
              "table": {
                "_type": "Table",
                "database": "store::TestDB",
                "mainTableDb": "store::TestDB",
                "schema": "default",
                "table": "AddressTable"
              },
              "tableAlias": "AddressTable"
            }
          ],
          "propertyMappings": [
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "model::Address",
                "property": "streetName"
              },
              "relationalOperation": {
                "_type": "column",
                "column": "streetName",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "AddressTable"
                },
                "tableAlias": "AddressTable"
              }
            },
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "model::Address",
                "property": "pincode"
              },
              "relationalOperation": {
                "_type": "column",
                "column": "pincode",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "AddressTable"
                },
                "tableAlias": "AddressTable"
              }
            }
          ],
          "root": true
        }
      ],
      "enumerationMappings": [],
      "includedMappings": [],
      "name": "RelationalMapping",
      "package": "execution",
      "tests": []
    },
    "classifierPath": "meta::pure::mapping::Mapping"
  },
  {
    "path": "execution::TestRuntime",
    "content": {
      "_type": "runtime",
      "name": "TestRuntime",
      "package": "execution",
      "runtimeValue": {
        "_type": "engineRuntime",
        "connections": [
          {
            "store": {
              "path": "store::TestDB",
              "type": "STORE"
            },
            "storeConnections": [
              {
                "connection": {
                  "_type": "connectionPointer",
                  "connection": "model::MyConnection"
                },
                "id": "connection_1"
              }
            ]
          }
        ],
        "mappings": [
          {
            "path": "execution::RelationalMapping",
            "type": "MAPPING"
          }
        ]
      }
    },
    "classifierPath": "meta::pure::runtime::PackageableRuntime"
  },
  {
    "path": "model::MyConnection",
    "content": {
      "_type": "connection",
      "connectionValue": {
        "_type": "RelationalDatabaseConnection",
        "authenticationStrategy": {
          "_type": "h2Default"
        },
        "databaseType": "H2",
        "datasourceSpecification": {
          "_type": "h2Local",
          "testDataSetupSqls": [
            "Drop table if exists FirmTable;\nDrop table if exists PersonTable;\nCreate Table FirmTable(id INT, Legal_Name VARCHAR(200));\nCreate Table PersonTable(id INT, firm_id INT, lastName VARCHAR(200), firstName VARCHAR(200));\nInsert into FirmTable (id, Legal_Name) values (1, 'FirmA');\nInsert into FirmTable (id, Legal_Name) values (2, 'Apple');\nInsert into PersonTable (id, firm_id, lastName, firstName) values (1, 1, 'John', 'Doe');\nInsert into PersonTable (id, firm_id, lastName, firstName) values (2, 2, 'Tim', 'Smith');\nInsert into PersonTable (id, firm_id, lastName, firstName) values (3, 3, 'Nicole', 'Doe');\n\n"
          ]
        },
        "element": "store::TestDB",
        "type": "H2"
      },
      "name": "MyConnection",
      "package": "model"
    },
    "classifierPath": "meta::pure::runtime::PackageableConnection"
  },
  {
    "path": "model::SnowFlakeConnection",
    "content": {
      "_type": "connection",
      "connectionValue": {
        "_type": "RelationalDatabaseConnection",
        "authenticationStrategy": {
          "_type": "snowflakePublic",
          "privateKeyVaultReference": "test",
          "passPhraseVaultReference": "test",
          "publicUserName": "test"
        },
        "databaseType": "Snowflake",
        "datasourceSpecification": {
          "_type": "snowflake",
          "accountName": "test",
          "cloudType": "test",
          "databaseName": "test",
          "region": "test",
          "warehouseName": "test"
        },
        "element": "store::TestDB",
        "type": "Snowflake"
      },
      "name": "SnowFlakeConnection",
      "package": "model"
    },
    "classifierPath": "meta::pure::runtime::PackageableConnection"
  }
]
