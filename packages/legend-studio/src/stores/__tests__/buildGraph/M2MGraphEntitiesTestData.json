[
  {
    "path": "ui::test1::ProfileTest",
    "content": {
      "_type": "profile",
      "name": "ProfileTest",
      "package": "ui::test1",
      "stereotypes": ["stereotype1", "stereotype2"],
      "tags": ["tag1", "tag2", "tag3"]
    },
    "classifierPath": "meta::pure::metamodel::extension::Profile"
  },
  {
    "path": "ui::TestEnumeration",
    "content": {
      "_type": "Enumeration",
      "name": "TestEnumeration",
      "package": "ui",
      "stereotypes": [
        {
          "profile": "ui::test1::ProfileTest",
          "value": "stereotype2"
        }
      ],
      "taggedValues": [
        {
          "tag": {
            "profile": "ui::test1::ProfileTest",
            "value": "tag1"
          },
          "value": "Enumeration Tag"
        }
      ],
      "values": [
        {
          "stereotypes": [
            {
              "profile": "ui::test1::ProfileTest",
              "value": "stereotype1"
            }
          ],
          "taggedValues": [
            {
              "tag": {
                "profile": "ui::test1::ProfileTest",
                "value": "tag1"
              },
              "value": "enumATag"
            }
          ],
          "value": "enumA"
        },
        {
          "value": "enumB"
        },
        {
          "value": "enumC"
        }
      ]
    },
    "classifierPath": "meta::pure::metamodel::type::Enumeration"
  },
  {
    "path": "ui::test2::Degree",
    "content": {
      "_type": "Enumeration",
      "name": "Degree",
      "package": "ui::test2",
      "values": [
        {
          "value": "BSc"
        },
        {
          "value": "MSc"
        },
        {
          "value": "PHd"
        }
      ]
    },
    "classifierPath": "meta::pure::metamodel::type::Enumeration"
  },
  {
    "path": "ui::TestClass",
    "content": {
      "_type": "class",
      "constraints": [
        {
          "functionDefinition": {
            "_type": "lambda",
            "body": [
              {
                "_type": "func",
                "function": "equal",
                "parameters": [
                  {
                    "_type": "property",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this"
                      }
                    ],
                    "property": "a"
                  },
                  {
                    "_type": "string",
                    "multiplicity": {
                      "lowerBound": 1,
                      "upperBound": 1
                    },
                    "values": ["aa"]
                  }
                ]
              }
            ],
            "parameters": []
          },
          "name": "name"
        },
        {
          "functionDefinition": {
            "_type": "lambda",
            "body": [
              {
                "_type": "func",
                "function": "equal",
                "parameters": [
                  {
                    "_type": "property",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this"
                      }
                    ],
                    "property": "b"
                  },
                  {
                    "_type": "integer",
                    "multiplicity": {
                      "lowerBound": 1,
                      "upperBound": 1
                    },
                    "values": [1]
                  }
                ]
              }
            ],
            "parameters": []
          },
          "name": "1"
        }
      ],
      "name": "TestClass",
      "package": "ui",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "a",
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "time",
          "type": "StrictTime"
        },
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 2
          },
          "name": "b",
          "stereotypes": [
            {
              "profile": "ui::test1::ProfileTest",
              "value": "stereotype1"
            }
          ],
          "taggedValues": [
            {
              "tag": {
                "profile": "ui::test1::ProfileTest",
                "value": "tag2"
              },
              "value": "lets write a tag"
            }
          ],
          "type": "Integer"
        },
        {
          "multiplicity": {
            "lowerBound": 0
          },
          "name": "name",
          "type": "Boolean"
        },
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "person",
          "type": "ui::test2::Person"
        }
      ],
      "qualifiedProperties": [
        {
          "body": [
            {
              "_type": "func",
              "function": "plus",
              "parameters": [
                {
                  "_type": "collection",
                  "multiplicity": {
                    "lowerBound": 2,
                    "upperBound": 2
                  },
                  "values": [
                    {
                      "_type": "property",
                      "parameters": [
                        {
                          "_type": "var",
                          "name": "s"
                        }
                      ],
                      "property": "arms"
                    },
                    {
                      "_type": "integer",
                      "multiplicity": {
                        "lowerBound": 1,
                        "upperBound": 1
                      },
                      "values": [4]
                    }
                  ]
                }
              ]
            }
          ],
          "name": "calculate",
          "parameters": [
            {
              "_type": "var",
              "class": "ui::test1::Anyone",
              "multiplicity": {
                "lowerBound": 1,
                "upperBound": 1
              },
              "name": "s"
            }
          ],
          "returnMultiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "returnType": "Integer"
        }
      ],
      "superTypes": ["ui::test1::Animal"],
      "stereotypes": [
        {
          "profile": "ui::test1::ProfileTest",
          "value": "stereotype1"
        }
      ],
      "taggedValues": [
        {
          "tag": {
            "profile": "ui::test1::ProfileTest",
            "value": "tag1"
          },
          "value": "test"
        }
      ]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "ui::TestClassSibling",
    "content": {
      "_type": "class",
      "name": "TestClassSibling",
      "package": "ui",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "anythingGoes",
          "type": "Boolean"
        }
      ]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "ui::test1::Animal",
    "content": {
      "_type": "class",
      "name": "Animal",
      "package": "ui::test1",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "legs",
          "type": "Integer"
        },
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "arms",
          "type": "Integer"
        }
      ],
      "superTypes": ["ui::test1::Organism"]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "ui::test1::Anyone",
    "content": {
      "_type": "class",
      "name": "Anyone",
      "package": "ui::test1",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "legs",
          "type": "Integer"
        },
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "arms",
          "type": "Integer"
        }
      ],
      "superTypes": ["ui::test1::Human"],
      "taggedValues": [
        {
          "tag": {
            "profile": "ui::test1::ProfileTest",
            "value": "tag1"
          },
          "value": "hello"
        }
      ]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "ui::test1::Cat",
    "content": {
      "_type": "class",
      "name": "Cat",
      "package": "ui::test1",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "breed",
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 0
          },
          "name": "parents",
          "type": "ui::test1::Dog"
        }
      ],
      "superTypes": ["ui::test1::Pet"]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "ui::test1::Dog",
    "content": {
      "_type": "class",
      "name": "Dog",
      "package": "ui::test1",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "breed",
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 0
          },
          "name": "parents",
          "type": "ui::test1::Dog"
        }
      ],
      "superTypes": ["ui::test1::Pet"]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "ui::test1::Human",
    "content": {
      "_type": "class",
      "name": "Human",
      "package": "ui::test1",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 0
          },
          "name": "parents",
          "type": "ui::test1::Human"
        },
        {
          "multiplicity": {
            "lowerBound": 0
          },
          "name": "siblings",
          "type": "ui::test1::Human"
        }
      ],
      "superTypes": ["ui::test1::Organism"]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "ui::test1::Organism",
    "content": {
      "_type": "class",
      "name": "Organism",
      "package": "ui::test1",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "planet",
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 0,
            "upperBound": 1
          },
          "name": "description",
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 0,
            "upperBound": 1
          },
          "name": "founder",
          "type": "ui::test1::Human"
        }
      ]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "ui::test1::Other",
    "content": {
      "_type": "class",
      "name": "Other",
      "package": "ui::test1",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 0
          },
          "name": "friend",
          "type": "ui::test1::Something"
        },
        {
          "multiplicity": {
            "lowerBound": 0
          },
          "name": "otherFriend",
          "type": "ui::test1::Anyone"
        }
      ]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "ui::test1::Pet",
    "content": {
      "_type": "class",
      "name": "Pet",
      "package": "ui::test1",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "name",
          "type": "String"
        }
      ],
      "superTypes": ["ui::test1::Animal"]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "ui::test1::Something",
    "content": {
      "_type": "class",
      "name": "Something",
      "package": "ui::test1",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "legs",
          "type": "Integer"
        },
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "arms",
          "type": "Integer"
        }
      ],
      "superTypes": ["ui::test1::Human"]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "ui::test1::Source_Something",
    "content": {
      "_type": "class",
      "name": "Source_Something",
      "package": "ui::test1",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 0
          },
          "name": "name",
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 0
          },
          "name": "lastName",
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 0
          },
          "name": "age",
          "type": "Integer"
        }
      ]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "ui::test1::Target_Something",
    "content": {
      "_type": "class",
      "name": "Target_Something",
      "package": "ui::test1",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 0
          },
          "name": "fullName",
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 0
          },
          "name": "age",
          "type": "Integer"
        },
        {
          "multiplicity": {
            "lowerBound": 0
          },
          "name": "description",
          "type": "String"
        }
      ]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "ui::test2::Address",
    "content": {
      "_type": "class",
      "name": "Address",
      "package": "ui::test2",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "line1",
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "line2",
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "city",
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "postCode",
          "type": "String"
        }
      ]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "ui::test2::Firm",
    "content": {
      "_type": "class",
      "constraints": [
        {
          "functionDefinition": {
            "_type": "lambda",
            "body": [
              {
                "_type": "func",
                "function": "endsWith",
                "parameters": [
                  {
                    "_type": "property",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this"
                      }
                    ],
                    "property": "legalName"
                  },
                  {
                    "_type": "string",
                    "multiplicity": {
                      "lowerBound": 1,
                      "upperBound": 1
                    },
                    "values": ["LTD"]
                  }
                ]
              }
            ],
            "parameters": []
          },
          "name": "0"
        }
      ],
      "name": "Firm",
      "package": "ui::test2",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "legalName",
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 0
          },
          "name": "applicants",
          "type": "ui::test2::Person"
        }
      ]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "ui::test2::GSEmployee",
    "content": {
      "_type": "class",
      "constraints": [
        {
          "functionDefinition": {
            "_type": "lambda",
            "body": [
              {
                "_type": "func",
                "function": "startsWith",
                "parameters": [
                  {
                    "_type": "property",
                    "parameters": [
                      {
                        "_type": "property",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this"
                          }
                        ],
                        "property": "firm"
                      }
                    ],
                    "property": "legalName"
                  },
                  {
                    "_type": "string",
                    "multiplicity": {
                      "lowerBound": 1,
                      "upperBound": 1
                    },
                    "values": ["Goldman"]
                  }
                ]
              }
            ],
            "parameters": []
          },
          "name": "nameStartsWithGS"
        },
        {
          "functionDefinition": {
            "_type": "lambda",
            "body": [
              {
                "_type": "func",
                "function": "contains",
                "parameters": [
                  {
                    "_type": "property",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this"
                      }
                    ],
                    "property": "degreesHeld"
                  },
                  {
                    "_type": "func",
                    "function": "extractEnumValue",
                    "parameters": [
                      {
                        "_type": "string",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        },
                        "values": ["ui::test2::Degree"]
                      },
                      {
                        "_type": "string",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        },
                        "values": ["BSc"]
                      }
                    ]
                  }
                ]
              }
            ],
            "parameters": []
          },
          "name": "hasDegrees"
        },
        {
          "functionDefinition": {
            "_type": "lambda",
            "body": [
              {
                "_type": "property",
                "parameters": [
                  {
                    "_type": "var",
                    "name": "this"
                  }
                ],
                "property": "isSmart"
              }
            ],
            "parameters": []
          },
          "name": "shouldBeSmart"
        }
      ],
      "name": "GSEmployee",
      "package": "ui::test2",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "firm",
          "type": "ui::test2::Firm"
        }
      ],
      "superTypes": ["ui::test2::Person"]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "ui::test2::GSEmployeeWithTitle",
    "content": {
      "_type": "class",
      "constraints": [
        {
          "functionDefinition": {
            "_type": "lambda",
            "body": [
              {
                "_type": "func",
                "function": "isNotEmpty",
                "parameters": [
                  {
                    "_type": "property",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this"
                      }
                    ],
                    "property": "title"
                  }
                ]
              }
            ],
            "parameters": []
          },
          "name": "titleNotEmpty"
        }
      ],
      "name": "GSEmployeeWithTitle",
      "package": "ui::test2",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 0,
            "upperBound": 1
          },
          "name": "title",
          "type": "String"
        }
      ],
      "superTypes": ["ui::test2::GSEmployee"]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "ui::test2::Person",
    "content": {
      "_type": "class",
      "constraints": [
        {
          "functionDefinition": {
            "_type": "lambda",
            "body": [
              {
                "_type": "func",
                "function": "lessThan",
                "parameters": [
                  {
                    "_type": "func",
                    "function": "length",
                    "parameters": [
                      {
                        "_type": "property",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this"
                          }
                        ],
                        "property": "lastName"
                      }
                    ]
                  },
                  {
                    "_type": "integer",
                    "multiplicity": {
                      "lowerBound": 1,
                      "upperBound": 1
                    },
                    "values": [10]
                  }
                ]
              }
            ],
            "parameters": []
          },
          "name": "lastName"
        },
        {
          "functionDefinition": {
            "_type": "lambda",
            "body": [
              {
                "_type": "func",
                "function": "greaterThan",
                "parameters": [
                  {
                    "_type": "property",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this"
                      }
                    ],
                    "property": "age"
                  },
                  {
                    "_type": "integer",
                    "multiplicity": {
                      "lowerBound": 1,
                      "upperBound": 1
                    },
                    "values": [0]
                  }
                ]
              }
            ],
            "parameters": []
          },
          "name": "age"
        },
        {
          "functionDefinition": {
            "_type": "lambda",
            "body": [
              {
                "_type": "func",
                "function": "if",
                "parameters": [
                  {
                    "_type": "property",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this"
                      }
                    ],
                    "property": "isSmart"
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "func",
                        "function": "greaterThan",
                        "parameters": [
                          {
                            "_type": "func",
                            "function": "size",
                            "parameters": [
                              {
                                "_type": "property",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "this"
                                  }
                                ],
                                "property": "degreesHeld"
                              }
                            ]
                          },
                          {
                            "_type": "integer",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            },
                            "values": [0]
                          }
                        ]
                      }
                    ],
                    "parameters": []
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "func",
                        "function": "isEmpty",
                        "parameters": [
                          {
                            "_type": "property",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "this"
                              }
                            ],
                            "property": "degreesHeld"
                          }
                        ]
                      }
                    ],
                    "parameters": []
                  }
                ]
              }
            ],
            "parameters": []
          },
          "name": "2"
        },
        {
          "functionDefinition": {
            "_type": "lambda",
            "body": [
              {
                "_type": "func",
                "function": "lessThan",
                "parameters": [
                  {
                    "_type": "func",
                    "function": "length",
                    "parameters": [
                      {
                        "_type": "property",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this"
                          }
                        ],
                        "property": "firstName"
                      }
                    ]
                  },
                  {
                    "_type": "integer",
                    "multiplicity": {
                      "lowerBound": 1,
                      "upperBound": 1
                    },
                    "values": [10]
                  }
                ]
              }
            ],
            "parameters": []
          },
          "name": "warningExample"
        }
      ],
      "name": "Person",
      "package": "ui::test2",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 0,
            "upperBound": 1
          },
          "name": "application",
          "type": "ui::test2::Firm"
        }
      ],
      "superTypes": ["ui::test2::PersonWithoutConstraints"],
      "taggedValues": [
        {
          "tag": {
            "profile": "meta::pure::profiles::doc",
            "value": "doc"
          },
          "value": "Constraint are any valid PURE boolean expression"
        }
      ]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "ui::test2::PersonWithoutConstraints",
    "content": {
      "_type": "class",
      "name": "PersonWithoutConstraints",
      "package": "ui::test2",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "firstName",
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "lastName",
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 0,
            "upperBound": 2
          },
          "name": "nickNames",
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "age",
          "type": "Integer"
        },
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "isSmart",
          "type": "Boolean"
        },
        {
          "multiplicity": {
            "lowerBound": 0
          },
          "name": "degreesHeld",
          "type": "ui::test2::Degree"
        }
      ],
      "qualifiedProperties": [
        {
          "body": [
            {
              "_type": "string",
              "multiplicity": {
                "lowerBound": 1,
                "upperBound": 1
              },
              "values": ["make this test pass"]
            }
          ],
          "name": "xza",
          "parameters": [],
          "returnMultiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "returnType": "String"
        }
      ]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "ui::TestAssociation",
    "content": {
      "_type": "association",
      "name": "TestAssociation",
      "package": "ui",
      "stereotypes": [
        {
          "profile": "ui::test1::ProfileTest",
          "value": "stereotype2"
        }
      ],
      "taggedValues": [
        {
          "tag": {
            "profile": "ui::test1::ProfileTest",
            "value": "tag1"
          },
          "value": "Association Tag"
        }
      ],
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "testClassProp",
          "type": "ui::TestClass"
        },
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "stereotypes": [
            {
              "profile": "ui::test1::ProfileTest",
              "value": "stereotype1"
            }
          ],
          "taggedValues": [
            {
              "tag": {
                "profile": "ui::test1::ProfileTest",
                "value": "tag1"
              },
              "value": "association tag"
            }
          ],
          "name": "testClassSibling",
          "type": "ui::TestClassSibling"
        }
      ]
    },
    "classifierPath": "meta::pure::metamodel::relationship::Association"
  },
  {
    "path": "ui::testMapping",
    "content": {
      "_type": "mapping",
      "classMappings": [
        {
          "_type": "pureInstance",
          "class": "ui::test1::Target_Something",
          "id": "ui_test1_Target_Something",
          "propertyMappings": [
            {
              "_type": "purePropertyMapping",
              "explodeProperty": false,
              "property": {
                "class": "ui::test1::Target_Something",
                "property": "fullName"
              },
              "source": "",
              "transform": {
                "_type": "lambda",
                "body": [
                  {
                    "_type": "property",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "src"
                      }
                    ],
                    "property": "name"
                  }
                ],
                "parameters": []
              }
            },
            {
              "_type": "purePropertyMapping",
              "explodeProperty": false,
              "property": {
                "class": "ui::test1::Target_Something",
                "property": "age"
              },
              "source": "",
              "transform": {
                "_type": "lambda",
                "body": [
                  {
                    "_type": "integer",
                    "multiplicity": {
                      "lowerBound": 1,
                      "upperBound": 1
                    },
                    "values": [25]
                  }
                ],
                "parameters": []
              }
            },
            {
              "_type": "purePropertyMapping",
              "explodeProperty": false,
              "property": {
                "class": "ui::test1::Target_Something",
                "property": "description"
              },
              "source": "",
              "transform": {
                "_type": "lambda",
                "body": [
                  {
                    "_type": "property",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "src"
                      }
                    ],
                    "property": "lastName"
                  }
                ],
                "parameters": []
              }
            }
          ],
          "root": false,
          "srcClass": "ui::test1::Source_Something"
        },
        {
          "_type": "pureInstance",
          "class": "ui::test1::Target_Something",
          "id": "targetSomething",
          "propertyMappings": [
            {
              "_type": "purePropertyMapping",
              "explodeProperty": false,
              "property": {
                "class": "ui::test1::Target_Something",
                "property": "fullName"
              },
              "source": "",
              "transform": {
                "_type": "lambda",
                "body": [
                  {
                    "_type": "string",
                    "multiplicity": {
                      "lowerBound": 1,
                      "upperBound": 1
                    },
                    "values": ["bye"]
                  }
                ],
                "parameters": []
              }
            },
            {
              "_type": "purePropertyMapping",
              "explodeProperty": false,
              "property": {
                "class": "ui::test1::Target_Something",
                "property": "age"
              },
              "source": "",
              "transform": {
                "_type": "lambda",
                "body": [
                  {
                    "_type": "integer",
                    "multiplicity": {
                      "lowerBound": 1,
                      "upperBound": 1
                    },
                    "values": [11]
                  }
                ],
                "parameters": []
              }
            },
            {
              "_type": "purePropertyMapping",
              "explodeProperty": false,
              "property": {
                "class": "ui::test1::Target_Something",
                "property": "description"
              },
              "source": "",
              "transform": {
                "_type": "lambda",
                "body": [
                  {
                    "_type": "string",
                    "multiplicity": {
                      "lowerBound": 1,
                      "upperBound": 1
                    },
                    "values": ["hello"]
                  }
                ],
                "parameters": []
              }
            }
          ],
          "root": false
        },
        {
          "_type": "operation",
          "class": "ui::test1::Target_Something",
          "id": "unionOfSomething",
          "operation": "STORE_UNION",
          "parameters": ["ui_test1_Target_Something", "targetSomething"],
          "root": true
        }
      ],
      "enumerationMappings": [],
      "includedMappings": [],
      "name": "testMapping",
      "package": "ui",
      "tests": []
    },
    "classifierPath": "meta::pure::mapping::Mapping"
  },
  {
    "path": "ui::testDiagram",
    "content": {
      "_type": "diagram",
      "classViews": [
        {
          "class": "ui::test1::Human",
          "id": "06c2b45e-25d5-4e6c-aba9-8fc985958927",
          "position": {
            "x": 578.9999961853027,
            "y": 224.98577880859375
          },
          "rectangle": {
            "height": 55,
            "width": 112.8984375
          }
        },
        {
          "class": "ui::test1::Something",
          "id": "abe13f41-8b54-4013-98ea-7a8ea2e20ca9",
          "position": {
            "x": 846.9999961853027,
            "y": 339.98577880859375
          },
          "rectangle": {
            "height": 55,
            "width": 98.86376953125
          }
        },
        {
          "class": "ui::test1::Anyone",
          "id": "72b5ba37-b5ac-41d1-ada5-cfe132542bc7",
          "position": {
            "x": 314.99999618530273,
            "y": 387.98577880859375
          },
          "rectangle": {
            "height": 67,
            "width": 98.86376953125
          }
        },
        {
          "class": "ui::test1::Other",
          "id": "2ce40294-a427-4833-b3f7-646cdbe85adb",
          "position": {
            "x": 546.9318771362305,
            "y": 622.4715576171875
          },
          "rectangle": {
            "height": 31,
            "width": 52.00390625
          }
        }
      ],
      "generalizationViews": [
        {
          "line": {
            "points": [
              {
                "x": 364.43188095092773,
                "y": 421.48577880859375
              },
              {
                "x": 635.4492149353027,
                "y": 252.48577880859375
              }
            ]
          },
          "sourceView": "72b5ba37-b5ac-41d1-ada5-cfe132542bc7",
          "targetView": "06c2b45e-25d5-4e6c-aba9-8fc985958927"
        },
        {
          "line": {
            "points": [
              {
                "x": 896.4318809509277,
                "y": 367.48577880859375
              },
              {
                "x": 635.4492149353027,
                "y": 252.48577880859375
              }
            ]
          },
          "sourceView": "abe13f41-8b54-4013-98ea-7a8ea2e20ca9",
          "targetView": "06c2b45e-25d5-4e6c-aba9-8fc985958927"
        }
      ],
      "name": "testDiagram",
      "package": "ui",
      "propertyViews": [
        {
          "line": {
            "points": [
              {
                "x": 572.9338302612305,
                "y": 637.9715576171875
              },
              {
                "x": 364.43188095092773,
                "y": 421.48577880859375
              }
            ]
          },
          "property": {
            "class": "ui::test1::Other",
            "property": "otherFriend"
          },
          "sourceView": "2ce40294-a427-4833-b3f7-646cdbe85adb",
          "targetView": "72b5ba37-b5ac-41d1-ada5-cfe132542bc7"
        },
        {
          "line": {
            "points": [
              {
                "x": 572.9338302612305,
                "y": 637.9715576171875
              },
              {
                "x": 694.5517029224175,
                "y": 549.2286682128906
              },
              {
                "x": 896.4318809509277,
                "y": 367.48577880859375
              }
            ]
          },
          "property": {
            "class": "ui::test1::Other",
            "property": "friend"
          },
          "sourceView": "2ce40294-a427-4833-b3f7-646cdbe85adb",
          "targetView": "abe13f41-8b54-4013-98ea-7a8ea2e20ca9"
        }
      ]
    },
    "classifierPath": "meta::pure::metamodel::diagram::Diagram"
  }
]
