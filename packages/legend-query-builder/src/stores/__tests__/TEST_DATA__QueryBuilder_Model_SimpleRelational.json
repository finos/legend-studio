[
  {
    "path": "model::Person",
    "content": {
      "_type": "class",
      "name": "Person",
      "package": "model",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "firstName",
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "lastName",
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 0
          },
          "name": "hobbies",
          "type": "model::Hobby"
        }
      ]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "model::Firm",
    "content": {
      "_type": "class",
      "name": "Firm",
      "package": "model",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "legalName",
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 0
          },
          "name": "employees",
          "type": "model::Person"
        },
        {
          "multiplicity": {
            "lowerBound": 0
          },
          "name": "contractors",
          "type": "model::Person"
        },
        {
          "multiplicity": {
            "lowerBound": 1
          },
          "name": "address",
          "type": "model::Address"
        }
      ]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "model::Hobby",
    "content": {
      "_type": "class",
      "name": "Hobby",
      "package": "model",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "name",
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "id",
          "type": "Integer"
        }
      ]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "model::Address",
    "content": {
      "_type": "class",
      "name": "Address",
      "package": "model",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "streetName",
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "pincode",
          "type": "Number"
        }
      ],
      "stereotypes": [
        {
          "profile": "meta::pure::profiles::temporal",
          "value": "businesstemporal"
        }
      ]
    },
    "classifierPath": "meta::pure::metamodel::type::Class"
  },
  {
    "path": "store::TestDB",
    "content": {
      "_type": "relational",
      "filters": [],
      "includedStores": [],
      "joins": [
        {
          "name": "FirmPerson",
          "operation": {
            "_type": "dynaFunc",
            "funcName": "equal",
            "parameters": [
              {
                "_type": "column",
                "column": "firm_id",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "PersonTable"
                },
                "tableAlias": "PersonTable"
              },
              {
                "_type": "column",
                "column": "id",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "FirmTable"
                },
                "tableAlias": "FirmTable"
              }
            ]
          }
        },
        {
          "name": "FirmAddress",
          "operation": {
            "_type": "dynaFunc",
            "funcName": "equal",
            "parameters": [
              {
                "_type": "column",
                "column": "firm_id",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "AddressTable"
                },
                "tableAlias": "AddressTable"
              },
              {
                "_type": "column",
                "column": "id",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "FirmTable"
                },
                "tableAlias": "FirmTable"
              }
            ]
          }
        },
        {
          "name": "HobbyPerson",
          "operation": {
            "_type": "dynaFunc",
            "funcName": "equal",
            "parameters": [
              {
                "_type": "column",
                "column": "id",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "PersonTable"
                },
                "tableAlias": "PersonTable"
              },
              {
                "_type": "column",
                "column": "id",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "HobbyTable"
                },
                "tableAlias": "HobbyTable"
              }
            ]
          }
        }
      ],
      "name": "TestDB",
      "package": "store",
      "schemas": [
        {
          "name": "default",
          "tables": [
            {
              "columns": [
                {
                  "name": "id",
                  "nullable": false,
                  "type": {
                    "_type": "Integer"
                  }
                },
                {
                  "name": "legal_name",
                  "nullable": true,
                  "type": {
                    "_type": "Varchar",
                    "size": 200
                  }
                }
              ],
              "name": "FirmTable",
              "primaryKey": ["id"]
            },
            {
              "columns": [
                {
                  "name": "id",
                  "nullable": false,
                  "type": {
                    "_type": "Integer"
                  }
                },
                {
                  "name": "firm_id",
                  "nullable": true,
                  "type": {
                    "_type": "Integer"
                  }
                },
                {
                  "name": "firstName",
                  "nullable": true,
                  "type": {
                    "_type": "Varchar",
                    "size": 200
                  }
                },
                {
                  "name": "lastName",
                  "nullable": true,
                  "type": {
                    "_type": "Varchar",
                    "size": 200
                  }
                }
              ],
              "name": "PersonTable",
              "primaryKey": ["id"]
            },
            {
              "columns": [
                {
                  "name": "id",
                  "nullable": false,
                  "type": {
                    "_type": "Integer"
                  }
                },
                {
                  "name": "name",
                  "nullable": true,
                  "type": {
                    "_type": "Varchar",
                    "size": 200
                  }
                }
              ],
              "name": "HobbyTable",
              "primaryKey": ["id"]
            },
            {
              "columns": [
                {
                  "name": "id",
                  "nullable": false,
                  "type": {
                    "_type": "Integer"
                  }
                },
                {
                  "name": "firm_id",
                  "nullable": true,
                  "type": {
                    "_type": "Integer"
                  }
                },
                {
                  "name": "pincode",
                  "nullable": true,
                  "type": {
                    "_type": "Integer"
                  }
                },
                {
                  "name": "streetName",
                  "nullable": true,
                  "type": {
                    "_type": "Varchar",
                    "size": 200
                  }
                }
              ],
              "name": "AddressTable",
              "primaryKey": ["id"]
            }
          ],
          "views": []
        }
      ]
    },
    "classifierPath": "meta::relational::metamodel::Database"
  },
  {
    "path": "execution::RelationalMapping",
    "content": {
      "_type": "mapping",
      "classMappings": [
        {
          "_type": "relational",
          "class": "model::Person",
          "distinct": false,
          "mainTable": {
            "_type": "Table",
            "database": "store::TestDB",
            "mainTableDb": "store::TestDB",
            "schema": "default",
            "table": "PersonTable"
          },
          "primaryKey": [
            {
              "_type": "column",
              "column": "id",
              "table": {
                "_type": "Table",
                "database": "store::TestDB",
                "mainTableDb": "store::TestDB",
                "schema": "default",
                "table": "PersonTable"
              },
              "tableAlias": "PersonTable"
            }
          ],
          "propertyMappings": [
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "model::Person",
                "property": "firstName"
              },
              "relationalOperation": {
                "_type": "column",
                "column": "firstName",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "PersonTable"
                },
                "tableAlias": "PersonTable"
              }
            },
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "model::Person",
                "property": "lastName"
              },
              "relationalOperation": {
                "_type": "column",
                "column": "lastName",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "PersonTable"
                },
                "tableAlias": "PersonTable"
              }
            },
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "model::Person",
                "property": "hobbies"
              },
              "relationalOperation": {
                "_type": "elemtWithJoins",
                "joins": [
                  {
                    "db": "store::TestDB",
                    "name": "HobbyPerson"
                  }
                ]
              },
              "target": "model_Hobby"
            }
          ],
          "root": true
        },
        {
          "_type": "relational",
          "class": "model::Firm",
          "distinct": false,
          "mainTable": {
            "_type": "Table",
            "database": "store::TestDB",
            "mainTableDb": "store::TestDB",
            "schema": "default",
            "table": "FirmTable"
          },
          "primaryKey": [
            {
              "_type": "column",
              "column": "id",
              "table": {
                "_type": "Table",
                "database": "store::TestDB",
                "mainTableDb": "store::TestDB",
                "schema": "default",
                "table": "FirmTable"
              },
              "tableAlias": "FirmTable"
            }
          ],
          "propertyMappings": [
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "model::Firm",
                "property": "legalName"
              },
              "relationalOperation": {
                "_type": "column",
                "column": "legal_name",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "FirmTable"
                },
                "tableAlias": "FirmTable"
              }
            },
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "model::Firm",
                "property": "employees"
              },
              "relationalOperation": {
                "_type": "elemtWithJoins",
                "joins": [
                  {
                    "db": "store::TestDB",
                    "name": "FirmPerson"
                  }
                ]
              },
              "target": "model_Person"
            },
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "model::Firm",
                "property": "contractors"
              },
              "relationalOperation": {
                "_type": "elemtWithJoins",
                "joins": [
                  {
                    "db": "store::TestDB",
                    "name": "FirmPerson"
                  }
                ]
              },
              "target": "model_Person"
            },
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "model::Firm",
                "property": "address"
              },
              "relationalOperation": {
                "_type": "elemtWithJoins",
                "joins": [
                  {
                    "db": "store::TestDB",
                    "name": "FirmAddress"
                  }
                ]
              },
              "target": "model_Address"
            }
          ],
          "root": true
        },
        {
          "_type": "relational",
          "class": "model::Hobby",
          "distinct": false,
          "mainTable": {
            "_type": "Table",
            "database": "store::TestDB",
            "mainTableDb": "store::TestDB",
            "schema": "default",
            "table": "HobbyTable"
          },
          "primaryKey": [
            {
              "_type": "column",
              "column": "id",
              "table": {
                "_type": "Table",
                "database": "store::TestDB",
                "mainTableDb": "store::TestDB",
                "schema": "default",
                "table": "HobbyTable"
              },
              "tableAlias": "HobbyTable"
            }
          ],
          "propertyMappings": [
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "model::Hobby",
                "property": "name"
              },
              "relationalOperation": {
                "_type": "column",
                "column": "name",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "HobbyTable"
                },
                "tableAlias": "HobbyTable"
              }
            },
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "model::Hobby",
                "property": "id"
              },
              "relationalOperation": {
                "_type": "column",
                "column": "id",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "HobbyTable"
                },
                "tableAlias": "HobbyTable"
              }
            }
          ],
          "root": true
        },
        {
          "_type": "relational",
          "class": "model::Address",
          "distinct": false,
          "mainTable": {
            "_type": "Table",
            "database": "store::TestDB",
            "mainTableDb": "store::TestDB",
            "schema": "default",
            "table": "AddressTable"
          },
          "primaryKey": [
            {
              "_type": "column",
              "column": "id",
              "table": {
                "_type": "Table",
                "database": "store::TestDB",
                "mainTableDb": "store::TestDB",
                "schema": "default",
                "table": "AddressTable"
              },
              "tableAlias": "AddressTable"
            }
          ],
          "propertyMappings": [
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "model::Address",
                "property": "streetName"
              },
              "relationalOperation": {
                "_type": "column",
                "column": "streetName",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "AddressTable"
                },
                "tableAlias": "AddressTable"
              }
            },
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "model::Address",
                "property": "pincode"
              },
              "relationalOperation": {
                "_type": "column",
                "column": "pincode",
                "table": {
                  "_type": "Table",
                  "database": "store::TestDB",
                  "mainTableDb": "store::TestDB",
                  "schema": "default",
                  "table": "AddressTable"
                },
                "tableAlias": "AddressTable"
              }
            }
          ],
          "root": true
        }
      ],
      "enumerationMappings": [],
      "includedMappings": [],
      "name": "RelationalMapping",
      "package": "execution",
      "tests": []
    },
    "classifierPath": "meta::pure::mapping::Mapping"
  },
  {
    "path": "service::nestedService",
    "content": {
      "_type": "service",
      "autoActivateUpdates": true,
      "documentation": "",
      "execution": {
        "_type": "pureMultiExecution",
        "executionKey": "key",
        "executionParameters": [
          {
            "key": "execContext_1",
            "mapping": "execution::RelationalMapping",
            "runtime": {
              "_type": "runtimePointer",
              "runtime": "execution::Runtime"
            }
          },
          {
            "key": "key1",
            "mapping": "execution::RelationalMapping",
            "runtime": {
              "_type": "runtimePointer",
              "runtime": "execution::Runtime"
            }
          }
        ],
        "func": {
          "_type": "lambda",
          "body": [
            {
              "_type": "func",
              "function": "project",
              "parameters": [
                {
                  "_type": "func",
                  "function": "filter",
                  "parameters": [
                    {
                      "_type": "func",
                      "function": "getAll",
                      "parameters": [
                        {
                          "_type": "packageableElementPtr",
                          "fullPath": "model::Firm"
                        }
                      ]
                    },
                    {
                      "_type": "lambda",
                      "body": [
                        {
                          "_type": "func",
                          "function": "and",
                          "parameters": [
                            {
                              "_type": "func",
                              "function": "exists",
                              "parameters": [
                                {
                                  "_type": "property",
                                  "parameters": [
                                    {
                                      "_type": "var",
                                      "name": "x"
                                    }
                                  ],
                                  "property": "employees"
                                },
                                {
                                  "_type": "lambda",
                                  "body": [
                                    {
                                      "_type": "func",
                                      "function": "and",
                                      "parameters": [
                                        {
                                          "_type": "func",
                                          "function": "and",
                                          "parameters": [
                                            {
                                              "_type": "func",
                                              "function": "equal",
                                              "parameters": [
                                                {
                                                  "_type": "property",
                                                  "parameters": [
                                                    {
                                                      "_type": "var",
                                                      "name": "x_1"
                                                    }
                                                  ],
                                                  "property": "firstName"
                                                },
                                                {
                                                  "_type": "string",
                                                  "value": "John"
                                                }
                                              ]
                                            },
                                            {
                                              "_type": "func",
                                              "function": "equal",
                                              "parameters": [
                                                {
                                                  "_type": "property",
                                                  "parameters": [
                                                    {
                                                      "_type": "var",
                                                      "name": "x_1"
                                                    }
                                                  ],
                                                  "property": "lastName"
                                                },
                                                {
                                                  "_type": "string",
                                                  "value": "Doe"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "_type": "func",
                                          "function": "exists",
                                          "parameters": [
                                            {
                                              "_type": "property",
                                              "parameters": [
                                                {
                                                  "_type": "var",
                                                  "name": "x_1"
                                                }
                                              ],
                                              "property": "hobbies"
                                            },
                                            {
                                              "_type": "lambda",
                                              "body": [
                                                {
                                                  "_type": "func",
                                                  "function": "equal",
                                                  "parameters": [
                                                    {
                                                      "_type": "property",
                                                      "parameters": [
                                                        {
                                                          "_type": "var",
                                                          "name": "x_2"
                                                        }
                                                      ],
                                                      "property": "id"
                                                    },
                                                    {
                                                      "_type": "integer",
                                                      "value": 0
                                                    }
                                                  ]
                                                }
                                              ],
                                              "parameters": [
                                                {
                                                  "_type": "var",
                                                  "name": "x_2"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "parameters": [
                                    {
                                      "_type": "var",
                                      "name": "x_1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "_type": "func",
                              "function": "equal",
                              "parameters": [
                                {
                                  "_type": "property",
                                  "parameters": [
                                    {
                                      "_type": "var",
                                      "name": "x"
                                    }
                                  ],
                                  "property": "legalName"
                                },
                                {
                                  "_type": "string",
                                  "value": "Firm"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "parameters": [
                        {
                          "_type": "var",
                          "name": "x"
                        }
                      ]
                    }
                  ]
                },
                {
                  "_type": "collection",
                  "multiplicity": {
                    "lowerBound": 3,
                    "upperBound": 3
                  },
                  "values": [
                    {
                      "_type": "lambda",
                      "body": [
                        {
                          "_type": "property",
                          "parameters": [
                            {
                              "_type": "property",
                              "parameters": [
                                {
                                  "_type": "var",
                                  "name": "x"
                                }
                              ],
                              "property": "employees"
                            }
                          ],
                          "property": "firstName"
                        }
                      ],
                      "parameters": [
                        {
                          "_type": "var",
                          "name": "x"
                        }
                      ]
                    },
                    {
                      "_type": "lambda",
                      "body": [
                        {
                          "_type": "property",
                          "parameters": [
                            {
                              "_type": "property",
                              "parameters": [
                                {
                                  "_type": "var",
                                  "name": "x"
                                }
                              ],
                              "property": "employees"
                            }
                          ],
                          "property": "lastName"
                        }
                      ],
                      "parameters": [
                        {
                          "_type": "var",
                          "name": "x"
                        }
                      ]
                    },
                    {
                      "_type": "lambda",
                      "body": [
                        {
                          "_type": "property",
                          "parameters": [
                            {
                              "_type": "var",
                              "name": "x"
                            }
                          ],
                          "property": "legalName"
                        }
                      ],
                      "parameters": [
                        {
                          "_type": "var",
                          "name": "x"
                        }
                      ]
                    }
                  ]
                },
                {
                  "_type": "collection",
                  "multiplicity": {
                    "lowerBound": 3,
                    "upperBound": 3
                  },
                  "values": [
                    {
                      "_type": "string",
                      "value": "Employees/First Name"
                    },
                    {
                      "_type": "string",
                      "value": "Employees/Last Name"
                    },
                    {
                      "_type": "string",
                      "value": "Legal Name"
                    }
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "_type": "var",
              "class": "StrictDate",
              "multiplicity": {
                "lowerBound": 1,
                "upperBound": 1
              },
              "name": "var_1"
            }
          ]
        }
      },
      "name": "nestedService",
      "owners": [],
      "package": "service",
      "pattern": "/d2c48a9c-70fa-46e3-8173-c355e774004f",
      "testSuites": [
        {
          "_type": "serviceTestSuite",
          "id": "testSuite1",
          "testData": {
            "connectionsTestData": [
              {
                "data": {
                  "_type": "relationalCSVData",
                  "tables": [
                    {
                      "schema": "default",
                      "table": "PersonTable",
                      "values": "id,firm_id,firstName,lastName\n1,1,John,Doe\n2,1,Nicole,Smith\n3,2,Time,Smith\n"
                    },
                    {
                      "schema": "default",
                      "table": "FirmTable",
                      "values": "id,legal_name\n1,Finos\n2,Apple\n"
                    }
                  ]
                },
                "id": "connection_1"
              }
            ]
          },
          "tests": [
            {
              "_type": "serviceTest",
              "assertions": [
                {
                  "_type": "equalToJson",
                  "expected": {
                    "_type": "externalFormat",
                    "contentType": "application/json",
                    "data": "[\n  {\n    \"Employees/First Name\": \"John\",\n    \"Employees/Last Name\": \"Doe\",\n    \"Legal Name\": \"Finos\"\n  },\n  {\n    \"Employees/First Name\": \"Nicole\",\n    \"Employees/Last Name\": \"Smith\",\n    \"Legal Name\": \"Finos\"\n  },\n  {\n    \"Employees/First Name\": \"Time\",\n    \"Employees/Last Name\": \"Smith\",\n    \"Legal Name\": \"Apple\"\n  }\n]"
                  },
                  "id": "shouldPass"
                }
              ],
              "id": "test1",
              "keys": [],
              "parameters": [
                {
                  "name": "var_1",
                  "value": {
                    "_type": "strictDate",
                    "sourceInformation": {
                      "endColumn": 31,
                      "endLine": 126,
                      "sourceId": "",
                      "startColumn": 21,
                      "startLine": 126
                    },
                    "value": "2022-08-12"
                  }
                }
              ],
              "serializationFormat": "PURE_TDSOBJECT"
            }
          ]
        },
        {
          "_type": "serviceTestSuite",
          "id": "testSuite2",
          "testData": {
            "connectionsTestData": [
              {
                "data": {
                  "_type": "relationalCSVData",
                  "tables": [
                    {
                      "schema": "default",
                      "table": "PersonTable",
                      "values": "id,firm_id,firstName,lastName\n1,1,John,Doe\n2,1,Nicole,Smith\n3,2,Time,Smith\n"
                    },
                    {
                      "schema": "default",
                      "table": "FirmTable",
                      "values": "id,legal_name\n1,Finos\n2,Apple\n"
                    }
                  ]
                },
                "id": "connection_1"
              }
            ]
          },
          "tests": [
            {
              "_type": "serviceTest",
              "assertions": [
                {
                  "_type": "equalToJson",
                  "expected": {
                    "_type": "externalFormat",
                    "contentType": "application/json",
                    "data": "[\n  {\n    \"Employees/First Name\": \"John\",\n    \"Employees/Last Name\": \"De\",\n    \"Legal Name\": \"Finos\"\n  },\n  {\n    \"Employees/First Name\": \"Nicole\",\n    \"Employees/Last Name\": \"Smith\",\n    \"Legal Name\": \"Finos\"\n  },\n  {\n    \"Employees/First Name\": \"Time\",\n    \"Employees/Last Name\": \"Smith\",\n    \"Legal Name\": \"Apple\"\n  }\n]"
                  },
                  "id": "shouldPass"
                }
              ],
              "id": "test1",
              "keys": [],
              "parameters": [
                {
                  "name": "var_1",
                  "value": {
                    "_type": "strictDate",
                    "sourceInformation": {
                      "endColumn": 31,
                      "endLine": 173,
                      "sourceId": "",
                      "startColumn": 21,
                      "startLine": 173
                    },
                    "value": "2022-08-12"
                  }
                }
              ],
              "serializationFormat": "PURE_TDSOBJECT"
            }
          ]
        }
      ]
    },
    "classifierPath": "meta::legend::service::metamodel::Service"
  },
  {
    "path": "service::SimpleRelationalPassWithSpecialEmbeddedData",
    "content": {
      "_type": "service",
      "autoActivateUpdates": true,
      "documentation": "",
      "execution": {
        "_type": "pureMultiExecution",
        "executionKey": "key",
        "executionParameters": [
          {
            "key": "execContext_1",
            "mapping": "execution::RelationalMapping",
            "runtime": {
              "_type": "runtimePointer",
              "runtime": "execution::Runtime"
            }
          },
          {
            "key": "key1",
            "mapping": "execution::RelationalMapping",
            "runtime": {
              "_type": "runtimePointer",
              "runtime": "execution::Runtime"
            }
          }
        ],
        "func": {
          "_type": "lambda",
          "body": [
            {
              "_type": "func",
              "function": "project",
              "parameters": [
                {
                  "_type": "func",
                  "function": "filter",
                  "parameters": [
                    {
                      "_type": "func",
                      "function": "getAll",
                      "parameters": [
                        {
                          "_type": "packageableElementPtr",
                          "fullPath": "model::Firm"
                        }
                      ]
                    },
                    {
                      "_type": "lambda",
                      "body": [
                        {
                          "_type": "func",
                          "function": "and",
                          "parameters": [
                            {
                              "_type": "func",
                              "function": "exists",
                              "parameters": [
                                {
                                  "_type": "property",
                                  "parameters": [
                                    {
                                      "_type": "var",
                                      "name": "x"
                                    }
                                  ],
                                  "property": "employees"
                                },
                                {
                                  "_type": "lambda",
                                  "body": [
                                    {
                                      "_type": "func",
                                      "function": "and",
                                      "parameters": [
                                        {
                                          "_type": "func",
                                          "function": "equal",
                                          "parameters": [
                                            {
                                              "_type": "property",
                                              "parameters": [
                                                {
                                                  "_type": "var",
                                                  "name": "x_1"
                                                }
                                              ],
                                              "property": "firstName"
                                            },
                                            {
                                              "_type": "string",
                                              "value": "John"
                                            }
                                          ]
                                        },
                                        {
                                          "_type": "func",
                                          "function": "equal",
                                          "parameters": [
                                            {
                                              "_type": "property",
                                              "parameters": [
                                                {
                                                  "_type": "var",
                                                  "name": "x_1"
                                                }
                                              ],
                                              "property": "lastName"
                                            },
                                            {
                                              "_type": "string",
                                              "value": "Doe"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "parameters": [
                                    {
                                      "_type": "var",
                                      "name": "x_1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "_type": "func",
                              "function": "equal",
                              "parameters": [
                                {
                                  "_type": "property",
                                  "parameters": [
                                    {
                                      "_type": "var",
                                      "name": "x"
                                    }
                                  ],
                                  "property": "legalName"
                                },
                                {
                                  "_type": "string",
                                  "value": "Firm"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "parameters": [
                        {
                          "_type": "var",
                          "name": "x"
                        }
                      ]
                    }
                  ]
                },
                {
                  "_type": "collection",
                  "multiplicity": {
                    "lowerBound": 3,
                    "upperBound": 3
                  },
                  "values": [
                    {
                      "_type": "lambda",
                      "body": [
                        {
                          "_type": "property",
                          "parameters": [
                            {
                              "_type": "property",
                              "parameters": [
                                {
                                  "_type": "var",
                                  "name": "x"
                                }
                              ],
                              "property": "employees"
                            }
                          ],
                          "property": "firstName"
                        }
                      ],
                      "parameters": [
                        {
                          "_type": "var",
                          "name": "x"
                        }
                      ]
                    },
                    {
                      "_type": "lambda",
                      "body": [
                        {
                          "_type": "property",
                          "parameters": [
                            {
                              "_type": "property",
                              "parameters": [
                                {
                                  "_type": "var",
                                  "name": "x"
                                }
                              ],
                              "property": "employees"
                            }
                          ],
                          "property": "lastName"
                        }
                      ],
                      "parameters": [
                        {
                          "_type": "var",
                          "name": "x"
                        }
                      ]
                    },
                    {
                      "_type": "lambda",
                      "body": [
                        {
                          "_type": "property",
                          "parameters": [
                            {
                              "_type": "var",
                              "name": "x"
                            }
                          ],
                          "property": "legalName"
                        }
                      ],
                      "parameters": [
                        {
                          "_type": "var",
                          "name": "x"
                        }
                      ]
                    }
                  ]
                },
                {
                  "_type": "collection",
                  "multiplicity": {
                    "lowerBound": 3,
                    "upperBound": 3
                  },
                  "values": [
                    {
                      "_type": "string",
                      "value": "Employees/First Name"
                    },
                    {
                      "_type": "string",
                      "value": "Employees/Last Name"
                    },
                    {
                      "_type": "string",
                      "value": "Legal Name"
                    }
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "_type": "var",
              "class": "StrictDate",
              "multiplicity": {
                "lowerBound": 1,
                "upperBound": 1
              },
              "name": "var_1"
            }
          ]
        }
      },
      "name": "SimpleRelationalPassWithSpecialEmbeddedData",
      "owners": [],
      "package": "service",
      "pattern": "/d2c48a9c-70fa-46e3-8173-c355e774004f",
      "testSuites": [
        {
          "_type": "serviceTestSuite",
          "id": "testSuite1",
          "testData": {
            "connectionsTestData": [
              {
                "data": {
                  "_type": "relationalCSVData",
                  "tables": [
                    {
                      "schema": "default",
                      "table": "PersonTable",
                      "values": "id,firm_id,firstName,lastName\n1,1,John,Doe\n2,1,Nicole,Smith\n3,2,Time,Smith\n"
                    },
                    {
                      "schema": "default",
                      "table": "FirmTable",
                      "values": "id,legal_name\n1,Finos\n2,Apple\n"
                    }
                  ]
                },
                "id": "connection_1"
              }
            ]
          },
          "tests": [
            {
              "_type": "serviceTest",
              "assertions": [
                {
                  "_type": "equalToJson",
                  "expected": {
                    "_type": "externalFormat",
                    "contentType": "application/json",
                    "data": "[\n  {\n    \"Employees/First Name\": \"John\",\n    \"Employees/Last Name\": \"Doe\",\n    \"Legal Name\": \"Finos\"\n  },\n  {\n    \"Employees/First Name\": \"Nicole\",\n    \"Employees/Last Name\": \"Smith\",\n    \"Legal Name\": \"Finos\"\n  },\n  {\n    \"Employees/First Name\": \"Time\",\n    \"Employees/Last Name\": \"Smith\",\n    \"Legal Name\": \"Apple\"\n  }\n]"
                  },
                  "id": "shouldPass"
                }
              ],
              "id": "test1",
              "keys": [],
              "parameters": [
                {
                  "name": "var_1",
                  "value": {
                    "_type": "strictDate",
                    "sourceInformation": {
                      "endColumn": 31,
                      "endLine": 262,
                      "sourceId": "",
                      "startColumn": 21,
                      "startLine": 262
                    },
                    "value": "2022-08-12"
                  }
                }
              ],
              "serializationFormat": "PURE_TDSOBJECT"
            }
          ]
        },
        {
          "_type": "serviceTestSuite",
          "id": "testSuite2",
          "testData": {
            "connectionsTestData": [
              {
                "data": {
                  "_type": "relationalCSVData",
                  "tables": [
                    {
                      "schema": "default",
                      "table": "PersonTable",
                      "values": "id,firm_id,firstName,lastName\n1,1,John,Doe\n2,1,Nicole,Smith\n3,2,Time,Smith\n"
                    },
                    {
                      "schema": "default",
                      "table": "FirmTable",
                      "values": "id,legal_name\n1,Finos\n2,Apple\n"
                    }
                  ]
                },
                "id": "connection_1"
              }
            ]
          },
          "tests": [
            {
              "_type": "serviceTest",
              "assertions": [
                {
                  "_type": "equalToJson",
                  "expected": {
                    "_type": "externalFormat",
                    "contentType": "application/json",
                    "data": "[\n  {\n    \"Employees/First Name\": \"John\",\n    \"Employees/Last Name\": \"De\",\n    \"Legal Name\": \"Finos\"\n  },\n  {\n    \"Employees/First Name\": \"Nicole\",\n    \"Employees/Last Name\": \"Smith\",\n    \"Legal Name\": \"Finos\"\n  },\n  {\n    \"Employees/First Name\": \"Time\",\n    \"Employees/Last Name\": \"Smith\",\n    \"Legal Name\": \"Apple\"\n  }\n]"
                  },
                  "id": "shouldPass"
                }
              ],
              "id": "test1",
              "keys": [],
              "parameters": [
                {
                  "name": "var_1",
                  "value": {
                    "_type": "strictDate",
                    "sourceInformation": {
                      "endColumn": 31,
                      "endLine": 309,
                      "sourceId": "",
                      "startColumn": 21,
                      "startLine": 309
                    },
                    "value": "2022-08-12"
                  }
                }
              ],
              "serializationFormat": "PURE_TDSOBJECT"
            }
          ]
        }
      ]
    },
    "classifierPath": "meta::legend::service::metamodel::Service"
  },
  {
    "path": "service::singleExists",
    "content": {
      "_type": "service",
      "autoActivateUpdates": true,
      "documentation": "",
      "execution": {
        "_type": "pureSingleExecution",
        "func": {
          "_type": "lambda",
          "body": [
            {
              "_type": "func",
              "function": "project",
              "parameters": [
                {
                  "_type": "func",
                  "function": "filter",
                  "parameters": [
                    {
                      "_type": "func",
                      "function": "getAll",
                      "parameters": [
                        {
                          "_type": "packageableElementPtr",
                          "fullPath": "model::Firm"
                        }
                      ]
                    },
                    {
                      "_type": "lambda",
                      "body": [
                        {
                          "_type": "func",
                          "function": "exists",
                          "parameters": [
                            {
                              "_type": "property",
                              "parameters": [
                                {
                                  "_type": "var",
                                  "name": "x"
                                }
                              ],
                              "property": "employees"
                            },
                            {
                              "_type": "lambda",
                              "body": [
                                {
                                  "_type": "func",
                                  "function": "equal",
                                  "parameters": [
                                    {
                                      "_type": "property",
                                      "parameters": [
                                        {
                                          "_type": "var",
                                          "name": "x_1"
                                        }
                                      ],
                                      "property": "firstName"
                                    },
                                    {
                                      "_type": "string",
                                      "value": "John"
                                    }
                                  ]
                                }
                              ],
                              "parameters": [
                                {
                                  "_type": "var",
                                  "name": "x_1"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "parameters": [
                        {
                          "_type": "var",
                          "name": "x"
                        }
                      ]
                    }
                  ]
                },
                {
                  "_type": "collection",
                  "multiplicity": {
                    "lowerBound": 3,
                    "upperBound": 3
                  },
                  "values": [
                    {
                      "_type": "lambda",
                      "body": [
                        {
                          "_type": "property",
                          "parameters": [
                            {
                              "_type": "property",
                              "parameters": [
                                {
                                  "_type": "var",
                                  "name": "x"
                                }
                              ],
                              "property": "employees"
                            }
                          ],
                          "property": "firstName"
                        }
                      ],
                      "parameters": [
                        {
                          "_type": "var",
                          "name": "x"
                        }
                      ]
                    },
                    {
                      "_type": "lambda",
                      "body": [
                        {
                          "_type": "property",
                          "parameters": [
                            {
                              "_type": "property",
                              "parameters": [
                                {
                                  "_type": "var",
                                  "name": "x"
                                }
                              ],
                              "property": "employees"
                            }
                          ],
                          "property": "lastName"
                        }
                      ],
                      "parameters": [
                        {
                          "_type": "var",
                          "name": "x"
                        }
                      ]
                    },
                    {
                      "_type": "lambda",
                      "body": [
                        {
                          "_type": "property",
                          "parameters": [
                            {
                              "_type": "var",
                              "name": "x"
                            }
                          ],
                          "property": "legalName"
                        }
                      ],
                      "parameters": [
                        {
                          "_type": "var",
                          "name": "x"
                        }
                      ]
                    }
                  ]
                },
                {
                  "_type": "collection",
                  "multiplicity": {
                    "lowerBound": 3,
                    "upperBound": 3
                  },
                  "values": [
                    {
                      "_type": "string",
                      "value": "Employees/First Name"
                    },
                    {
                      "_type": "string",
                      "value": "Employees/Last Name"
                    },
                    {
                      "_type": "string",
                      "value": "Legal Name"
                    }
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "_type": "var",
              "class": "StrictDate",
              "multiplicity": {
                "lowerBound": 1,
                "upperBound": 1
              },
              "name": "var_1"
            }
          ]
        },
        "mapping": "execution::RelationalMapping",
        "runtime": {
          "_type": "runtimePointer",
          "runtime": "execution::Runtime"
        }
      },
      "name": "singleExists",
      "owners": [],
      "package": "service",
      "pattern": "/d2c48a9c-70fa-46e3-8173-c355e774004f",
      "testSuites": [
        {
          "_type": "serviceTestSuite",
          "id": "testSuite1",
          "testData": {
            "connectionsTestData": [
              {
                "data": {
                  "_type": "relationalCSVData",
                  "tables": [
                    {
                      "schema": "default",
                      "table": "PersonTable",
                      "values": "id,firm_id,firstName,lastName\n1,1,John,Doe\n2,1,Nicole,Smith\n3,2,Time,Smith\n"
                    },
                    {
                      "schema": "default",
                      "table": "FirmTable",
                      "values": "id,legal_name\n1,Finos\n2,Apple\n"
                    }
                  ]
                },
                "id": "connection_1"
              }
            ]
          },
          "tests": [
            {
              "_type": "serviceTest",
              "assertions": [
                {
                  "_type": "equalToJson",
                  "expected": {
                    "_type": "externalFormat",
                    "contentType": "application/json",
                    "data": "[\n  {\n    \"Employees/First Name\": \"John\",\n    \"Employees/Last Name\": \"Doe\",\n    \"Legal Name\": \"Finos\"\n  },\n  {\n    \"Employees/First Name\": \"Nicole\",\n    \"Employees/Last Name\": \"Smith\",\n    \"Legal Name\": \"Finos\"\n  },\n  {\n    \"Employees/First Name\": \"Time\",\n    \"Employees/Last Name\": \"Smith\",\n    \"Legal Name\": \"Apple\"\n  }\n]"
                  },
                  "id": "shouldPass"
                }
              ],
              "id": "test1",
              "keys": [],
              "parameters": [
                {
                  "name": "var_1",
                  "value": {
                    "_type": "strictDate",
                    "sourceInformation": {
                      "endColumn": 31,
                      "endLine": 387,
                      "sourceId": "",
                      "startColumn": 21,
                      "startLine": 387
                    },
                    "value": "2022-08-12"
                  }
                }
              ],
              "serializationFormat": "PURE_TDSOBJECT"
            }
          ]
        }
      ]
    },
    "classifierPath": "meta::legend::service::metamodel::Service"
  },
  {
    "path": "service::twoExistsInOneGroupCondition",
    "content": {
      "_type": "service",
      "autoActivateUpdates": true,
      "documentation": "",
      "execution": {
        "_type": "pureMultiExecution",
        "executionKey": "key",
        "executionParameters": [
          {
            "key": "execContext_1",
            "mapping": "execution::RelationalMapping",
            "runtime": {
              "_type": "runtimePointer",
              "runtime": "execution::Runtime"
            }
          },
          {
            "key": "key1",
            "mapping": "execution::RelationalMapping",
            "runtime": {
              "_type": "runtimePointer",
              "runtime": "execution::Runtime"
            }
          }
        ],
        "func": {
          "_type": "lambda",
          "body": [
            {
              "_type": "func",
              "function": "project",
              "parameters": [
                {
                  "_type": "func",
                  "function": "filter",
                  "parameters": [
                    {
                      "_type": "func",
                      "function": "getAll",
                      "parameters": [
                        {
                          "_type": "packageableElementPtr",
                          "fullPath": "model::Firm"
                        }
                      ]
                    },
                    {
                      "_type": "lambda",
                      "body": [
                        {
                          "_type": "func",
                          "function": "and",
                          "parameters": [
                            {
                              "_type": "func",
                              "function": "equal",
                              "parameters": [
                                {
                                  "_type": "property",
                                  "parameters": [
                                    {
                                      "_type": "var",
                                      "name": "x"
                                    }
                                  ],
                                  "property": "legalName"
                                },
                                {
                                  "_type": "string",
                                  "value": "Firm"
                                }
                              ]
                            },
                            {
                              "_type": "func",
                              "function": "and",
                              "parameters": [
                                {
                                  "_type": "func",
                                  "function": "exists",
                                  "parameters": [
                                    {
                                      "_type": "property",
                                      "parameters": [
                                        {
                                          "_type": "var",
                                          "name": "x"
                                        }
                                      ],
                                      "property": "employees"
                                    },
                                    {
                                      "_type": "lambda",
                                      "body": [
                                        {
                                          "_type": "func",
                                          "function": "and",
                                          "parameters": [
                                            {
                                              "_type": "func",
                                              "function": "equal",
                                              "parameters": [
                                                {
                                                  "_type": "property",
                                                  "parameters": [
                                                    {
                                                      "_type": "var",
                                                      "name": "x_1"
                                                    }
                                                  ],
                                                  "property": "firstName"
                                                },
                                                {
                                                  "_type": "string",
                                                  "value": "John"
                                                }
                                              ]
                                            },
                                            {
                                              "_type": "func",
                                              "function": "equal",
                                              "parameters": [
                                                {
                                                  "_type": "property",
                                                  "parameters": [
                                                    {
                                                      "_type": "var",
                                                      "name": "x_1"
                                                    }
                                                  ],
                                                  "property": "lastName"
                                                },
                                                {
                                                  "_type": "string",
                                                  "value": "Doe"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "parameters": [
                                        {
                                          "_type": "var",
                                          "name": "x_1"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "_type": "func",
                                  "function": "exists",
                                  "parameters": [
                                    {
                                      "_type": "property",
                                      "parameters": [
                                        {
                                          "_type": "var",
                                          "name": "x"
                                        }
                                      ],
                                      "property": "employees"
                                    },
                                    {
                                      "_type": "lambda",
                                      "body": [
                                        {
                                          "_type": "func",
                                          "function": "and",
                                          "parameters": [
                                            {
                                              "_type": "func",
                                              "function": "equal",
                                              "parameters": [
                                                {
                                                  "_type": "property",
                                                  "parameters": [
                                                    {
                                                      "_type": "var",
                                                      "name": "x_1"
                                                    }
                                                  ],
                                                  "property": "firstName"
                                                },
                                                {
                                                  "_type": "string",
                                                  "value": "John"
                                                }
                                              ]
                                            },
                                            {
                                              "_type": "func",
                                              "function": "equal",
                                              "parameters": [
                                                {
                                                  "_type": "property",
                                                  "parameters": [
                                                    {
                                                      "_type": "var",
                                                      "name": "x_1"
                                                    }
                                                  ],
                                                  "property": "lastName"
                                                },
                                                {
                                                  "_type": "string",
                                                  "value": "Doe"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "parameters": [
                                        {
                                          "_type": "var",
                                          "name": "x_1"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "parameters": [
                        {
                          "_type": "var",
                          "name": "x"
                        }
                      ]
                    }
                  ]
                },
                {
                  "_type": "collection",
                  "multiplicity": {
                    "lowerBound": 3,
                    "upperBound": 3
                  },
                  "values": [
                    {
                      "_type": "lambda",
                      "body": [
                        {
                          "_type": "property",
                          "parameters": [
                            {
                              "_type": "property",
                              "parameters": [
                                {
                                  "_type": "var",
                                  "name": "x"
                                }
                              ],
                              "property": "employees"
                            }
                          ],
                          "property": "firstName"
                        }
                      ],
                      "parameters": [
                        {
                          "_type": "var",
                          "name": "x"
                        }
                      ]
                    },
                    {
                      "_type": "lambda",
                      "body": [
                        {
                          "_type": "property",
                          "parameters": [
                            {
                              "_type": "property",
                              "parameters": [
                                {
                                  "_type": "var",
                                  "name": "x"
                                }
                              ],
                              "property": "employees"
                            }
                          ],
                          "property": "lastName"
                        }
                      ],
                      "parameters": [
                        {
                          "_type": "var",
                          "name": "x"
                        }
                      ]
                    },
                    {
                      "_type": "lambda",
                      "body": [
                        {
                          "_type": "property",
                          "parameters": [
                            {
                              "_type": "var",
                              "name": "x"
                            }
                          ],
                          "property": "legalName"
                        }
                      ],
                      "parameters": [
                        {
                          "_type": "var",
                          "name": "x"
                        }
                      ]
                    }
                  ]
                },
                {
                  "_type": "collection",
                  "multiplicity": {
                    "lowerBound": 3,
                    "upperBound": 3
                  },
                  "values": [
                    {
                      "_type": "string",
                      "value": "Employees/First Name"
                    },
                    {
                      "_type": "string",
                      "value": "Employees/Last Name"
                    },
                    {
                      "_type": "string",
                      "value": "Legal Name"
                    }
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "_type": "var",
              "class": "StrictDate",
              "multiplicity": {
                "lowerBound": 1,
                "upperBound": 1
              },
              "name": "var_1"
            }
          ]
        }
      },
      "name": "twoExistsInOneGroupCondition",
      "owners": [],
      "package": "service",
      "pattern": "/d2c48a9c-70fa-46e3-8173-c355e774004f",
      "testSuites": [
        {
          "_type": "serviceTestSuite",
          "id": "testSuite1",
          "testData": {
            "connectionsTestData": [
              {
                "data": {
                  "_type": "relationalCSVData",
                  "tables": [
                    {
                      "schema": "default",
                      "table": "PersonTable",
                      "values": "id,firm_id,firstName,lastName\n1,1,John,Doe\n2,1,Nicole,Smith\n3,2,Time,Smith\n"
                    },
                    {
                      "schema": "default",
                      "table": "FirmTable",
                      "values": "id,legal_name\n1,Finos\n2,Apple\n"
                    }
                  ]
                },
                "id": "connection_1"
              }
            ]
          },
          "tests": [
            {
              "_type": "serviceTest",
              "assertions": [
                {
                  "_type": "equalToJson",
                  "expected": {
                    "_type": "externalFormat",
                    "contentType": "application/json",
                    "data": "[\n  {\n    \"Employees/First Name\": \"John\",\n    \"Employees/Last Name\": \"Doe\",\n    \"Legal Name\": \"Finos\"\n  },\n  {\n    \"Employees/First Name\": \"Nicole\",\n    \"Employees/Last Name\": \"Smith\",\n    \"Legal Name\": \"Finos\"\n  },\n  {\n    \"Employees/First Name\": \"Time\",\n    \"Employees/Last Name\": \"Smith\",\n    \"Legal Name\": \"Apple\"\n  }\n]"
                  },
                  "id": "shouldPass"
                }
              ],
              "id": "test1",
              "keys": [],
              "parameters": [
                {
                  "name": "var_1",
                  "value": {
                    "_type": "strictDate",
                    "sourceInformation": {
                      "endColumn": 31,
                      "endLine": 480,
                      "sourceId": "",
                      "startColumn": 21,
                      "startLine": 480
                    },
                    "value": "2022-08-12"
                  }
                }
              ],
              "serializationFormat": "PURE_TDSOBJECT"
            }
          ]
        },
        {
          "_type": "serviceTestSuite",
          "id": "testSuite2",
          "testData": {
            "connectionsTestData": [
              {
                "data": {
                  "_type": "relationalCSVData",
                  "tables": [
                    {
                      "schema": "default",
                      "table": "PersonTable",
                      "values": "id,firm_id,firstName,lastName\n1,1,John,Doe\n2,1,Nicole,Smith\n3,2,Time,Smith\n"
                    },
                    {
                      "schema": "default",
                      "table": "FirmTable",
                      "values": "id,legal_name\n1,Finos\n2,Apple\n"
                    }
                  ]
                },
                "id": "connection_1"
              }
            ]
          },
          "tests": [
            {
              "_type": "serviceTest",
              "assertions": [
                {
                  "_type": "equalToJson",
                  "expected": {
                    "_type": "externalFormat",
                    "contentType": "application/json",
                    "data": "[\n  {\n    \"Employees/First Name\": \"John\",\n    \"Employees/Last Name\": \"De\",\n    \"Legal Name\": \"Finos\"\n  },\n  {\n    \"Employees/First Name\": \"Nicole\",\n    \"Employees/Last Name\": \"Smith\",\n    \"Legal Name\": \"Finos\"\n  },\n  {\n    \"Employees/First Name\": \"Time\",\n    \"Employees/Last Name\": \"Smith\",\n    \"Legal Name\": \"Apple\"\n  }\n]"
                  },
                  "id": "shouldPass"
                }
              ],
              "id": "test1",
              "keys": [],
              "parameters": [
                {
                  "name": "var_1",
                  "value": {
                    "_type": "strictDate",
                    "sourceInformation": {
                      "endColumn": 31,
                      "endLine": 527,
                      "sourceId": "",
                      "startColumn": 21,
                      "startLine": 527
                    },
                    "value": "2022-08-12"
                  }
                }
              ],
              "serializationFormat": "PURE_TDSOBJECT"
            }
          ]
        }
      ]
    },
    "classifierPath": "meta::legend::service::metamodel::Service"
  },
  {
    "path": "execution::Runtime",
    "content": {
      "_type": "runtime",
      "name": "Runtime",
      "package": "execution",
      "runtimeValue": {
        "_type": "engineRuntime",
        "connections": [
          {
            "store": {
              "path": "store::TestDB",
              "type": "STORE"
            },
            "storeConnections": [
              {
                "connection": {
                  "_type": "connectionPointer",
                  "connection": "model::MyConnection"
                },
                "id": "connection_1"
              }
            ]
          }
        ],
        "mappings": [
          {
            "path": "execution::RelationalMapping",
            "type": "MAPPING"
          }
        ]
      }
    },
    "classifierPath": "meta::pure::runtime::PackageableRuntime"
  },
  {
    "path": "model::MyConnection",
    "content": {
      "_type": "connection",
      "connectionValue": {
        "_type": "RelationalDatabaseConnection",
        "authenticationStrategy": {
          "_type": "h2Default"
        },
        "databaseType": "H2",
        "datasourceSpecification": {
          "_type": "h2Local",
          "testDataSetupSqls": [
            "Drop table if exists FirmTable;\nDrop table if exists PersonTable;\nCreate Table FirmTable(id INT, Legal_Name VARCHAR(200));\nCreate Table PersonTable(id INT, firm_id INT, lastName VARCHAR(200), firstName VARCHAR(200));\nInsert into FirmTable (id, Legal_Name) values (1, 'FirmA');\nInsert into FirmTable (id, Legal_Name) values (2, 'Apple');\nInsert into PersonTable (id, firm_id, lastName, firstName) values (1, 1, 'John', 'Doe');\nInsert into PersonTable (id, firm_id, lastName, firstName) values (2, 2, 'Tim', 'Smith');\nInsert into PersonTable (id, firm_id, lastName, firstName) values (3, 3, 'Nicole', 'Doe');\n\n"
          ]
        },
        "element": "store::TestDB",
        "type": "H2"
      },
      "name": "MyConnection",
      "package": "model"
    },
    "classifierPath": "meta::pure::runtime::PackageableConnection"
  },
  {
    "path": "data::RelationalData",
    "content": {
      "_type": "dataElement",
      "data": {
        "_type": "relationalCSVData",
        "tables": [
          {
            "schema": "default",
            "table": "PersonTable",
            "values": "id,firm_id,firstName,lastName\n1,1,John,Doe\n2,1,Nicole,Smith\n3,2,Time,Smith\n"
          },
          {
            "schema": "default",
            "table": "FirmTable",
            "values": "id,legal_name\n1,Finos\n2,Apple\n"
          }
        ]
      },
      "name": "RelationalData",
      "package": "data"
    },
    "classifierPath": "meta::pure::data::DataElement"
  }
]
