###Relational
Database store::eDB
(
  Table PRODUCT_DENORM
  (
    PRODUCT_ID INTEGER PRIMARY KEY,
    PRODUCT_NAME VARCHAR(200),
    MARKET_NAME VARCHAR(200),
    BOND_DETAILS VARCHAR(200),
    BOND_TYPE VARCHAR(10),
    BOND_STATUS VARCHAR(10),
    ISSUER_TYPE VARCHAR(10),
    ISSUER VARCHAR(10),
    ISSUER_ADDRESS_NAME VARCHAR(200),
    ISSUER_ADDRESS_STREET VARCHAR(200),
    HOLDER_TYPE VARCHAR(10),
    HOLDER VARCHAR(10),
    HOLDER_ADDRESS_NAME VARCHAR(200),
    HOLDER_ADDRESS_STREET VARCHAR(200),
    SUBPRODUCT_ID INTEGER,
    SUBPRODUCT_NAME VARCHAR(200)
  )
  Table BOND_DETAIL
  (
    BOND_ID INTEGER PRIMARY KEY,
    NOT_SO_GOOD_DETAIL VARCHAR(200),
    TYPE VARCHAR(10),
    STATUS VARCHAR(10),
    HOLDERID INTEGER
  )
  Table Party
  (
    id INTEGER PRIMARY KEY,
    name VARCHAR(200)
  )
  Table BondClassificationTable
  (
    PRODUCT_ID INTEGER PRIMARY KEY,
    type VARCHAR(200) PRIMARY KEY
  )

  Join BondDetailJoin(PRODUCT_DENORM.PRODUCT_ID = BOND_DETAIL.BOND_ID)
  Join BondDetailPartyJoin(BOND_DETAIL.HOLDERID = Party.id)
)


###Pure
Enum model::PartyType
{
  Company,
  Bearer,
  Goverment
}

Enum model::Status
{
  Pending,
  Open,
  Closed
}

Class model::Location extends model::GeographicEntity
{
  place: String[1];
  censusdate: Date[0..1];
}

Class model::Product
{
  name: String[1];
  market: String[1];
  bondDetails: model::BondDetail[1];
  subProduct: model::Product[1];
}

Class model::Party
{
  name: String[1];
  type: model::PartyType[1];
  address: model::Address[1];
}

Class model::GeographicEntity
{
  type: model::GeographicEntity[1];
}

Class model::BondDetail
{
  description: String[1];
  type: String[1];
  status: model::Status[1];
  issuer: model::Party[1];
  holder: model::Party[1];
}

Class model::Address extends model::GeographicEntity
{
  name: String[1];
  street: String[0..1];
  comments: String[0..1];
}


###Mapping
Mapping mapping::testMappingEmbeddedOtherwise
(
  model::Product[pMapping1]: Relational
  {
    ~primaryKey
    (
      [store::eDB]PRODUCT_DENORM.PRODUCT_ID
    )
    ~mainTable [store::eDB]PRODUCT_DENORM
    name: [store::eDB]PRODUCT_DENORM.PRODUCT_NAME,
    market: [store::eDB]PRODUCT_DENORM.MARKET_NAME,
    bondDetails
    (
      description: [store::eDB]PRODUCT_DENORM.BOND_DETAILS
    ) Otherwise ([bondMapping2]: [store::eDB]@BondDetailJoin)
  }
  model::BondDetail[bondMapping2]: Relational
  {
    ~primaryKey
    (
      [store::eDB]BOND_DETAIL.BOND_ID
    )
    ~mainTable [store::eDB]BOND_DETAIL
    description: [store::eDB]BOND_DETAIL.NOT_SO_GOOD_DETAIL,
    type: [store::eDB]BOND_DETAIL.TYPE,
    issuer
    (
      name: 'test'
    ),
    holder[model_Party]: [store::eDB]@BondDetailPartyJoin
  }
  model::Party: Relational
  {
    ~primaryKey
    (
      [store::eDB]Party.id
    )
    ~mainTable [store::eDB]Party
    name: [store::eDB]Party.name
  }
)
