###Relational
Database store::test::testDatabase
(
  Table ABC
  (
    id INTEGER PRIMARY KEY,
    aName VARCHAR(20),
    bName VARCHAR(20),
    cName VARCHAR(20),
    m1Id INTEGER,
    m2Id INTEGER,
    m3Id INTEGER,
    m4Id INTEGER,
    n1Id INTEGER,
    n2Id INTEGER,
    n3Id INTEGER,
    o1Id INTEGER,
    o2Id INTEGER
  )
  Table DEF
  (
    id INTEGER PRIMARY KEY,
    dName VARCHAR(20),
    eName VARCHAR(20),
    fName VARCHAR(20)
  )
  Table GHI
  (
    id INTEGER PRIMARY KEY,
    gName VARCHAR(20),
    hName VARCHAR(20),
    iName VARCHAR(20)
  )
  Table JKL
  (
    id INTEGER PRIMARY KEY,
    jName VARCHAR(20),
    kName VARCHAR(20),
    lName VARCHAR(20)
  )
  Table ABC2
  (
    id INTEGER PRIMARY KEY,
    aName VARCHAR(20),
    bName VARCHAR(20),
    cName VARCHAR(20),
    m1Id INTEGER,
    m2Id INTEGER,
    m3Id INTEGER,
    m4Id INTEGER,
    n1Id INTEGER,
    n2Id INTEGER,
    n3Id INTEGER,
    o1Id INTEGER,
    o2Id INTEGER
  )
  Table DEF2
  (
    id INTEGER PRIMARY KEY,
    dName VARCHAR(20),
    eName VARCHAR(20),
    fName VARCHAR(20)
  )
  Table GHI2
  (
    id INTEGER PRIMARY KEY,
    gName VARCHAR(20),
    hName VARCHAR(20),
    iName VARCHAR(20)
  )
  Table JKL2
  (
    id INTEGER PRIMARY KEY,
    jName VARCHAR(20),
    kName VARCHAR(20),
    lName VARCHAR(20)
  )

  Join AE(ABC.id = DEF.id)
  Join BH(ABC.id = GHI.id)
  Join CK(ABC.id = JKL.id)
  Join A2E2(ABC2.id = DEF2.id)
  Join B2H2(ABC2.id = GHI2.id)
  Join C2K2(ABC2.id = JKL2.id)

  Filter AFilter(ABC.aName = 'aName1')
  Filter CFilter(ABC.cName = 'cName1')
)

Database my::db
(
  Table PersonTable
  (
    NAME CHAR(200) PRIMARY KEY
  )
  Table EmployeeTable
  (
    FIRMNAME CHAR(200) PRIMARY KEY
  )
)


###Pure
Class model::test::A
{
  id: Integer[1];
  aName: String[1];
  m1: model::test::M[1];
  m2: model::test::M[1];
}

Class model::test::B extends model::test::A
{
  bName: String[1];
  n1: model::test::N[1];
  n2: model::test::N[1];
}

Class model::test::C extends model::test::B
{
  cName: String[1];
  o1: model::test::O[1];
  o2: model::test::O[1];
}

Class model::test::D
{
  id: Integer[1];
  dName: String[1];
}

Class model::test::E extends model::test::D
{
  eName: String[1];
}

Class model::test::F extends model::test::E
{
  fName: String[1];
}

Class model::test::G
{
  id: Integer[1];
  gName: String[1];
}

Class model::test::H extends model::test::G
{
  hName: String[1];
}

Class model::test::I extends model::test::H
{
  iName: String[1];
}

Class model::test::J
{
  id: Integer[1];
  jName: String[1];
}

Class model::test::K extends model::test::J
{
  kName: String[1];
}

Class model::test::L extends model::test::K
{
  lName: String[1];
}

Class model::test::M
{
  id: Integer[1];
  mName: String[1];
}

Class model::test::N
{
  id: Integer[1];
  nName: String[1];
}

Class model::test::O
{
  id: Integer[1];
  oName: String[1];
}

Class model::Person
{
  name: String[1];
}

Class model::Employee extends model::Person
{
  firmName: String[1];
}


###Mapping
Mapping mapping::testAMapping
(
  model::test::A[a]: Relational
  {
    ~primaryKey
    (
      [store::test::testDatabase]ABC.id
    )
    ~mainTable [store::test::testDatabase]ABC
    id: [store::test::testDatabase]ABC.id,
    aName: [store::test::testDatabase]ABC.aName
  }
)

Mapping mapping::testB1Mapping
(
  include mapping mapping::testAMapping

  model::test::B[b1] extends [a]: Relational
  {
  }
)

Mapping mapping::testB2Mapping
(
  include mapping mapping::testAMapping

  model::test::B[b2] extends [a]: Relational
  {
    aName: concat('bName_', [store::test::testDatabase]ABC.aName),
    bName: [store::test::testDatabase]ABC.bName
  }
)

Mapping mapping::testC1Mapping
(
  include mapping mapping::testB1Mapping

  model::test::C[c1] extends [b1]: Relational
  {
  }
)

Mapping mapping::testC2Mapping
(
  include mapping mapping::testB2Mapping

  model::test::C[c2] extends [b2]: Relational
  {
    aName: concat('cName_', [store::test::testDatabase]ABC.aName),
    bName: concat('cName_', [store::test::testDatabase]ABC.bName),
    cName: [store::test::testDatabase]ABC.cName
  }
)

Mapping model::map
(
  *model::Person[id]: Relational
  {
    ~primaryKey
    (
      [my::db]PersonTable.NAME
    )
    ~mainTable [my::db]PersonTable
  }
  *model::Employee extends [id]: Relational
  {
    ~primaryKey
    (
      [my::db]EmployeeTable.FIRMNAME
    )
    ~mainTable [my::db]EmployeeTable
    firmName: [my::db]EmployeeTable.FIRMNAME
  }
)
